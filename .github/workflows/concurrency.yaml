name: concurrency test

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: input
      tag:
        required: true
        type: input
      app:
        required: true
        type: input

jobs:
  ready_release:
    name: ready_release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # setup 
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: check tag is exsits
        run: |
          for item in $(git ls-remote --tags -q); do
            if [ "refs/tags/${{ github.event.inputs.tag}}}" = "$item" ]; then
              echo "tag ${{ github.event.inputs.tag}} is already exists"
              exit 2
            fi
          done
      - name: work branch init
        run: |
          git fetch
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b ${{ github.event.inputs.branch }}

      - name: tag detection
        run: |
          base=$(pwd)
          touch ${base}/change.txt
          label=""

          for app in $(echo '${{ github.event.inputs.app}}' | tr , " "); do

            label="${label},apps/${app}"
            echo $(date) >> change.txt
            echo $(date) >> ${app}.txt
            git add ${app}.txt
          done
          

          echo 'APPS_CHANGE<<EOF' >> $GITHUB_ENV
          cat ${base}/change.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo 'APPS_LABEL<<EOF' >> $GITHUB_ENV
          echo ${label} | cut -c 2- >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          rm ${base}/change.txt
      - name: push branch
        run: |
          if ! git diff --exit-code --quiet --cached
          then
            # changed
            git commit -m "[${{ github.event.inputs.tag}}] test"
          else
            # no change. make empty commit
            git commit -m "[${{ github.event.inputs.tag}}] test" --allow-empty
          fi

          git push -u origin ${{ github.event.inputs.branch }}
      - name: make pull request
        uses: devops-infra/action-pull-request@v0.5.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ github.event.inputs.branch }}
          target_branch: main
          title: PR for ${{ github.event.inputs.branch }}
          body: |
              [${{ github.event.inputs.tag}}] test
              ## changed apps
              ${{ env.APPS_CHANGE }}
          label: ${{ env.APPS_LABEL }}
          reviewer: ${{ env.PR_REVIEWERS }}
          get_diff: false
          allow_no_diff: true


